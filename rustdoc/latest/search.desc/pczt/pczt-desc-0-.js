searchState.loadedDescShard("pczt", 0, "The Partially Created Zcash Transaction (PCZT) format.\nThe PCZT encoding was invalid.\nThe bytes do not contain a PCZT.\nErrors that can occur while parsing a PCZT.\nA partially-created Zcash transaction.\nThe bytes are too short to contain a PCZT.\nThe PCZT has an unknown version.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGlobal fields that are relevant to the transaction as a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nParses a PCZT from its encoding.\nSerializes this PCZT.\nGlobal fields that are relevant to the transaction as a …\nReturns the argument unchanged.\nReturns whether the transaction has a <code>SIGHASH_SINGLE</code> …\nReturns whether transparent inputs can be added to or …\nCalls <code>U::from(self)</code>.\nReturns whether transparent outputs can be added to or …\nProprietary fields related to the overall transaction.\nReturns whether shielded spends or outputs can be added to …\nPCZT fields that are specific to producing the transaction…\nInformation about an Orchard output within a transaction.\nInformation about a Sapling spend within a transaction.\nThe Orchard actions in this bundle.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProprietary fields related to the note being spent.\nProprietary fields related to the note being created.\nThe raw encoding of the Orchard payment address that will …\nThe seed randomness for the output.\nThe user-facing address to which this output is being …\nThe value of the output.\nErrors that can occur while combining PCZTs.\nCombines the PCZTs.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstantiates the Combiner role with the given PCZTs.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn Redactor for the global transaction details.\nRemoves all proprietary values.\nFinishes the Redactor role, returning the redacted PCZT.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstantiates the Redactor role with the given PCZT.\nRedacts the global transaction details with the given …\nRedacts the Orchard bundle with the given closure.\nRedacts the proprietary value at the given key.\nRedacts the Sapling bundle with the given closure.\nRedacts the transparent bundle with the given closure.\nA Redactor for Orchard actions.\nA Redactor for the Orchard bundle.\nRemoves the proof.\nRemoves the <code>ock</code> value used to encrypt <code>out_ciphertext</code>.\nRemoves all output-specific proprietary values.\nRemoves the output’s recipient.\nRemoves the seed randomness for the note being created.\nRemoves the user-facing address to which the output is …\nRemoves the output’s value.\nRemoves the ZIP 32 derivation path at which the spending …\nRemoves the value commitment randomness.\nRemoves the spend authorization randomizer.\nRemoves the spend authorizing signature.\nRemoves the spending key for this spent note, if it is a …\nRemoves the spend’s full viewing key.\nRemoves all spend-specific proprietary values.\nRemoves the spend’s recipient.\nRemoves the rho value for the note being spent.\nRemoves the seed randomness for the note being spent.\nRemoves the spend’s value.\nRemoves the witness from the spent note to the bundle’s …\nRemoves the ZIP 32 derivation path at which the spending …\nRemoves the proof.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRedacts the action at the given index.\nRedacts all actions in the same way.\nRedacts the output-specific proprietary value at the given …\nRedacts the spend-specific proprietary value at the given …\nA Redactor for Sapling outputs.\nA Redactor for the Sapling bundle.\nA Redactor for Sapling spends.\nRemoves the spend authorization randomizer.\nRemoves the proof.\nRemoves the spend authorizing key for this spent note, if …\nRemoves the <code>ock</code> value used to encrypt <code>out_ciphertext</code>.\nRemoves the proof generation key.\nRemoves all proprietary values.\nRemoves all proprietary values.\nRemoves the note commitment randomness.\nRemoves the value commitment randomness.\nRemoves the value commitment randomness.\nRemoves the recipient.\nRemoves the recipient.\nRemoves the seed randomness for the note being spent.\nRemoves the seed randomness for the note being created.\nRemoves the spend authorizing signature.\nRemoves the user-facing address to which this output is …\nRemoves the value.\nRemoves the value.\nRemoves the witness from the note to the bundle’s anchor.\nRemoves the ZIP 32 derivation path at which the spending …\nRemoves the ZIP 32 derivation path at which the spending …\nRemoves the proof.\nRemoves the proof.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRedacts the output at the given index.\nRedacts all outputs in the same way.\nRedacts the proprietary value at the given key.\nRedacts the proprietary value at the given key.\nRedacts the spend at the given index.\nRedacts all spends in the same way.\nA Redactor for transparent inputs.\nA Redactor for transparent outputs.\nA Redactor for the transparent bundle.\nRemoves all BIP 32 derivation paths.\nRemoves all BIP 32 derivation paths.\nRemoves all HASH160 preimages.\nRemoves all HASH256 preimages.\nRemoves all signatures.\nRemoves all proprietary values.\nRemoves all proprietary values.\nRemoves the <code>redeem_script</code>.\nRemoves the <code>redeem_script</code>.\nRemoves all RIPEMD160 preimages.\nRemoves the <code>script_sig</code>.\nRemoves all SHA256 preimages.\nRemoves the user-facing address to which this output is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRedacts the BIP 32 derivation path for the given pubkey.\nRedacts the BIP 32 derivation path for the given pubkey.\nRedacts the HASH160 preimage for the given hash.\nRedacts the HASH256 preimage for the given hash.\nRedacts the input at the given index.\nRedacts all inputs in the same way.\nRedacts the output at the given index.\nRedacts all outputs in the same way.\nRedacts the signature for the given pubkey.\nRedacts the proprietary value at the given key.\nRedacts the proprietary value at the given key.\nRedacts the RIPEMD160 preimage for the given hash.\nRedacts the SHA256 preimage for the given hash.\nAn updater for a transparent PCZT output.\nFinishes the Updater role, returning the updated PCZT.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstantiates the Updater role with the given PCZT.\nStores the given proprietary value at the given key.\nUpdates the global transaction details with information in …\nFinishes the Verifier role, returning the updated PCZT.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInstantiates the Verifier role with the given PCZT.\nPCZT fields that are specific to producing the transaction…\nInformation about a Sapling output within a transaction.\nInformation about a Sapling spend within a transaction.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProprietary fields related to the note being spent.\nProprietary fields related to the note being spent.\nThe raw encoding of the Sapling payment address that will …\nThe seed randomness for the output.\nThe user-facing address to which this output is being …\nThe value of the output.\nPCZT fields that are specific to producing the transaction…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProprietary fields related to the note being spent.\nProprietary fields related to the note being spent.\nThe user-facing address to which this output is being …")