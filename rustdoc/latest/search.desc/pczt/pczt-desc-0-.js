searchState.loadedDescShard("pczt", 0, "The Partially Created Zcash Transaction (PCZT) format.\nThe PCZT encoding was invalid.\nThe bytes do not contain a PCZT.\nErrors that can occur while parsing a PCZT.\nA partially-created Zcash transaction.\nThe bytes are too short to contain a PCZT.\nThe PCZT has an unknown version.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGlobal fields that are relevant to the transaction as a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nParses a PCZT from its encoding.\nSerializes this PCZT.\nGlobal fields that are relevant to the transaction as a …\nReturns the argument unchanged.\nReturns whether the transaction has a <code>SIGHASH_SINGLE</code> …\nReturns whether transparent inputs can be added to or …\nCalls <code>U::from(self)</code>.\nReturns whether transparent outputs can be added to or …\nProprietary fields related to the overall transaction.\nReturns whether shielded spends or outputs can be added to …\nPCZT fields that are specific to producing the transaction…\nInformation about an Orchard output within a transaction.\nInformation about a Sapling spend within a transaction.\nThe Orchard actions in this bundle.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProprietary fields related to the note being spent.\nProprietary fields related to the note being created.\nThe raw encoding of the Orchard payment address that will …\nThe seed randomness for the output.\nThe value of the output.\nErrors that can occur while combining PCZTs.\nCombines the PCZTs.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstantiates the Combiner role with the given PCZTs.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn updater for a transparent PCZT output.\nFinishes the Updater role, returning the updated PCZT.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstantiates the Updater role with the given PCZT.\nStores the given proprietary value at the given key.\nUpdates the global transaction details with information in …\nPCZT fields that are specific to producing the transaction…\nInformation about a Sapling output within a transaction.\nInformation about a Sapling spend within a transaction.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProprietary fields related to the note being spent.\nProprietary fields related to the note being spent.\nThe raw encoding of the Sapling payment address that will …\nThe seed randomness for the output.\nThe value of the output.\nPCZT fields that are specific to producing the transaction…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProprietary fields related to the note being spent.\nProprietary fields related to the note being spent.")