(function() {
    var type_impls = Object.fromEntries([["zcash_address",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NetworkType\" class=\"impl\"><a href=\"#impl-Clone-for-NetworkType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for NetworkType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; NetworkType</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","zcash_address::Network"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NetworkType\" class=\"impl\"><a href=\"#impl-Debug-for-NetworkType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for NetworkType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","zcash_address::Network"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynamicUsage-for-NetworkType\" class=\"impl\"><a href=\"#impl-DynamicUsage-for-NetworkType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl DynamicUsage for NetworkType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.dynamic_usage\" class=\"method trait-impl\"><a href=\"#method.dynamic_usage\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dynamic_usage</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns a best estimate of the amount of heap-allocated memory used by this type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dynamic_usage_bounds\" class=\"method trait-impl\"><a href=\"#method.dynamic_usage_bounds\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dynamic_usage_bounds</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Returns the lower and upper bounds on the amount of heap-allocated memory used by\nthis type. <a>Read more</a></div></details></div></details>","DynamicUsage","zcash_address::Network"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NetworkType\" class=\"impl\"><a href=\"#impl-Hash-for-NetworkType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for NetworkType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","zcash_address::Network"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NetworkConstants-for-NetworkType\" class=\"impl\"><a href=\"#impl-NetworkConstants-for-NetworkType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl NetworkConstants for NetworkType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.coin_type\" class=\"method trait-impl\"><a href=\"#method.coin_type\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">coin_type</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The coin type for ZEC, as defined by <a href=\"https://github.com/satoshilabs/slips/blob/master/slip-0044.md\">SLIP 44</a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hrp_sapling_extended_spending_key\" class=\"method trait-impl\"><a href=\"#method.hrp_sapling_extended_spending_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hrp_sapling_extended_spending_key</a>(&amp;self) -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns the human-readable prefix for Bech32-encoded Sapling extended spending keys\nfor the network to which this NetworkConstants value applies. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hrp_sapling_extended_full_viewing_key\" class=\"method trait-impl\"><a href=\"#method.hrp_sapling_extended_full_viewing_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hrp_sapling_extended_full_viewing_key</a>(&amp;self) -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns the human-readable prefix for Bech32-encoded Sapling extended full\nviewing keys for the network to which this NetworkConstants value applies. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hrp_sapling_payment_address\" class=\"method trait-impl\"><a href=\"#method.hrp_sapling_payment_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hrp_sapling_payment_address</a>(&amp;self) -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns the Bech32-encoded human-readable prefix for Sapling payment addresses\nfor the network to which this NetworkConstants value applies. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.b58_sprout_address_prefix\" class=\"method trait-impl\"><a href=\"#method.b58_sprout_address_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">b58_sprout_address_prefix</a>(&amp;self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">2</a>]</h4></section></summary><div class='docblock'>Returns the human-readable prefix for Base58Check-encoded Sprout\npayment addresses for the network to which this NetworkConstants value\napplies. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.b58_pubkey_address_prefix\" class=\"method trait-impl\"><a href=\"#method.b58_pubkey_address_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">b58_pubkey_address_prefix</a>(&amp;self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">2</a>]</h4></section></summary><div class='docblock'>Returns the human-readable prefix for Base58Check-encoded transparent\npay-to-public-key-hash payment addresses for the network to which this NetworkConstants value\napplies.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.b58_script_address_prefix\" class=\"method trait-impl\"><a href=\"#method.b58_script_address_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">b58_script_address_prefix</a>(&amp;self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">2</a>]</h4></section></summary><div class='docblock'>Returns the human-readable prefix for Base58Check-encoded transparent pay-to-script-hash\npayment addresses for the network to which this NetworkConstants value applies.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hrp_tex_address\" class=\"method trait-impl\"><a href=\"#method.hrp_tex_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hrp_tex_address</a>(&amp;self) -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns the Bech32-encoded human-readable prefix for TEX addresses, for the\nnetwork to which this <code>NetworkConstants</code> value applies. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hrp_unified_address\" class=\"method trait-impl\"><a href=\"#method.hrp_unified_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hrp_unified_address</a>(&amp;self) -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The HRP for a Bech32m-encoded mainnet Unified Address. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hrp_unified_fvk\" class=\"method trait-impl\"><a href=\"#method.hrp_unified_fvk\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hrp_unified_fvk</a>(&amp;self) -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The HRP for a Bech32m-encoded mainnet Unified FVK. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hrp_unified_ivk\" class=\"method trait-impl\"><a href=\"#method.hrp_unified_ivk\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hrp_unified_ivk</a>(&amp;self) -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The HRP for a Bech32m-encoded mainnet Unified IVK. <a>Read more</a></div></details></div></details>","NetworkConstants","zcash_address::Network"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NetworkType\" class=\"impl\"><a href=\"#impl-PartialEq-for-NetworkType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for NetworkType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;NetworkType) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","zcash_address::Network"],["<section id=\"impl-Copy-for-NetworkType\" class=\"impl\"><a href=\"#impl-Copy-for-NetworkType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for NetworkType</h3></section>","Copy","zcash_address::Network"],["<section id=\"impl-Eq-for-NetworkType\" class=\"impl\"><a href=\"#impl-Eq-for-NetworkType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for NetworkType</h3></section>","Eq","zcash_address::Network"],["<section id=\"impl-StructuralPartialEq-for-NetworkType\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-NetworkType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for NetworkType</h3></section>","StructuralPartialEq","zcash_address::Network"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[17998]}