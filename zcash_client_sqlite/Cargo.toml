[package]
name = "zcash_client_sqlite"
description = "An SQLite-based Zcash light client"
version = "0.16.2"
authors = [
    "Jack Grigg <jack@z.cash>",
    "Kris Nuttycombe <kris@electriccoin.co>"
]
homepage = "https://github.com/zcash/librustzcash"
repository.workspace = true
readme = "README.md"
license.workspace = true
edition.workspace = true
rust-version.workspace = true
categories.workspace = true

[package.metadata.docs.rs]
# Manually specify features while `orchard` is not in the public API.
#all-features = true
features = [
    "multicore",
    "test-dependencies",
    "transparent-inputs",
    "unstable",
]
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
zcash_address.workspace = true
zcash_client_backend = { workspace = true, features = ["unstable-serialization", "unstable-spanning-tree"] }
zcash_encoding.workspace = true
zcash_keys = { workspace = true, features = ["sapling"] }
zcash_primitives.workspace = true
zcash_protocol.workspace = true
zip32.workspace = true
transparent.workspace = true

# Dependencies exposed in a public API:
# (Breaking upgrades to these require a breaking upgrade to this crate.)
# - Errors
bip32 = { workspace = true, optional = true }
bs58.workspace = true

# - Logging and metrics
tracing.workspace = true

# - Serialization
bitflags.workspace = true
byteorder.workspace = true
nonempty.workspace = true
prost.workspace = true
group.workspace = true
jubjub.workspace = true
serde = { workspace = true, optional = true }

# - Secret management
secrecy.workspace = true
subtle.workspace = true

# - Static assertions
static_assertions.workspace = true

# - Shielded protocols
orchard = { workspace = true, optional = true }
sapling.workspace = true

# - Note commitment trees
incrementalmerkletree.workspace = true
shardtree = { workspace = true, features = ["legacy-api"] }

# - SQLite databases
rusqlite = { workspace = true, features = ["time", "array", "uuid"] }
schemerz.workspace = true
schemerz-rusqlite.workspace = true
time.workspace = true
uuid = { workspace = true, features = ["v4"] }
regex = "1.4"

# Dependencies used internally:
# (Breaking upgrades to these are usually backwards-compatible, but check MSRVs.)
document-features.workspace = true
maybe-rayon.workspace = true
rand_core.workspace = true
rand_distr.workspace = true
rand.workspace = true

[dev-dependencies]
ambassador.workspace = true
assert_matches.workspace = true
bls12_381.workspace = true
incrementalmerkletree = { workspace = true, features = ["test-dependencies"] }
incrementalmerkletree-testing.workspace = true
pasta_curves.workspace = true
shardtree = { workspace = true, features = ["legacy-api", "test-dependencies"] }
orchard = { workspace = true, features = ["test-dependencies"] }
proptest.workspace = true
rand_chacha.workspace = true
rand_core.workspace = true
tempfile = "3.5.0"
zcash_keys = { workspace = true, features = ["test-dependencies"] }
zcash_note_encryption.workspace = true
zcash_proofs = { workspace = true, features = ["bundled-prover"] }
zcash_primitives = { workspace = true, features = ["test-dependencies", "non-standard-fees"] }
zcash_protocol = { workspace = true, features = ["local-consensus"] }
zcash_client_backend = { workspace = true, features = ["test-dependencies", "unstable-serialization", "unstable-spanning-tree"] }
zcash_address = { workspace = true, features = ["test-dependencies"] }
zip321 = { workspace = true }

[features]
default = ["multicore"]

## Enables multithreading support for creating proofs and building subtrees.
multicore = ["maybe-rayon/threads", "zcash_primitives/multicore"]

## Enables support for storing data related to the sending and receiving of 
## Orchard funds.
orchard = ["dep:orchard", "zcash_client_backend/orchard", "zcash_keys/orchard"]

## Exposes APIs that are useful for testing, such as `proptest` strategies.
test-dependencies = [
    "incrementalmerkletree/test-dependencies",
    "zcash_primitives/test-dependencies",
    "zcash_client_backend/test-dependencies",
    "incrementalmerkletree/test-dependencies",
]

## Enables receiving transparent funds and sending to transparent recipients
transparent-inputs = [
  "dep:bip32",
  "transparent/transparent-inputs",
  "zcash_keys/transparent-inputs",
  "zcash_client_backend/transparent-inputs"
]

## Enables `serde` derives for certain types.
serde = ["dep:serde", "uuid/serde"]

#! ### Experimental features

## Exposes unstable APIs. Their behaviour may change at any time.
unstable = ["zcash_client_backend/unstable"]

## A feature used to isolate tests that are expensive to run. Test-only.
expensive-tests = []

## A feature used to enable PCZT-specific tests without interfering with the
## protocol-specific flags. Test-only.
pczt-tests = ["serde", "zcash_client_backend/pczt"]

[lib]
bench = false

[lints]
workspace = true
