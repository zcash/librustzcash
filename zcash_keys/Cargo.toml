[package]
name = "zcash_keys"
description = "Zcash key and address management"
version = "0.11.0"
authors = [
    "Jack Grigg <jack@z.cash>",
    "Kris Nuttycombe <kris@electriccoin.co>"
]
homepage = "https://github.com/zcash/librustzcash"
repository.workspace = true
readme = "README.md"
license.workspace = true
edition.workspace = true
rust-version.workspace = true
categories.workspace = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
zcash_address.workspace = true
zcash_encoding.workspace = true
zcash_protocol.workspace = true
zip32.workspace = true

# Dependencies exposed in a public API:
nonempty.workspace = true

# - CSPRNG
rand_core.workspace = true

# - Encodings
bech32.workspace = true
bs58.workspace = true
core2.workspace = true
regex = { workspace = true, optional = true }

# - Transparent protocols
bip32 = { workspace = true, optional = true }
secp256k1 = { workspace = true, optional = true, default-features = false }
transparent.workspace = true
zeroize = { workspace = true, optional = true }

# - Logging and metrics
memuse.workspace = true
tracing.workspace = true

# - Secret management
secrecy.workspace = true
subtle.workspace = true

# - Shielded protocols
bls12_381.workspace = true
group.workspace = true
orchard = { workspace = true, optional = true }
sapling = { workspace = true, optional = true }

# - Test dependencies
proptest = { workspace = true, optional = true }

# Dependencies used internally:
# (Breaking upgrades to these are usually backwards-compatible, but check MSRVs.)
# - Documentation
document-features = { workspace = true, optional = true }

# - Encodings
byteorder = { workspace = true, optional = true }

# - Digests
blake2b_simd = { workspace = true }

# - Zcashd compatibility
bip0039 = { workspace = true, optional = true }

[dev-dependencies]
assert_matches.workspace = true
hex.workspace = true
jubjub.workspace = true
orchard = { workspace = true, features = ["circuit"] }
proptest.workspace = true
rand.workspace = true
rand_chacha.workspace = true
rand_core.workspace = true
secp256k1 = { workspace = true, features = ["rand"] }
zcash_address = { workspace = true, features = ["test-dependencies"] }
zcash_script.workspace = true

[features]
default = ["std"]
std = ["dep:document-features"]

## Enables use of transparent key parts and addresses
transparent-inputs = [
  "dep:bip32",
  "transparent/transparent-inputs",
]

## Enables use of zcashd-derived secp256k1 secret key encodings.
transparent-key-encoding = [
  "transparent-inputs", "dep:secp256k1", "dep:zeroize"
]

## Enables use of Orchard key parts and addresses
orchard = ["dep:orchard"]

## Enables use of Sapling key parts and addresses
sapling = ["dep:sapling"]

## Exposes APIs that are useful for testing, such as `proptest` strategies.
test-dependencies = [
    "dep:proptest",
    "orchard?/test-dependencies",
    "sapling?/test-dependencies",
    "transparent/test-dependencies",
]

#! ### Experimental features

## Exposes unstable APIs that are compatible with FROST key management
unstable-frost = ["orchard"]

## Exposes unstable APIs. Their behaviour may change at any time.
unstable = ["dep:byteorder"]

## Exposes APIs that are useful for interacting with legacy zcashd key material
zcashd-compat = ["dep:bip0039", "dep:regex"]

[badges]
maintenance = { status = "actively-developed" }

[lints]
workspace = true
