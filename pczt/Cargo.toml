[package]
name = "pczt"
version = "0.3.0"
authors = ["Jack Grigg <jack@electriccoin.co>"]
edition.workspace = true
rust-version.workspace = true
description = "Tools for working with partially-created Zcash transactions"
homepage = "https://github.com/zcash/librustzcash"
repository.workspace = true
license.workspace = true
categories.workspace = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
zcash_note_encryption = { workspace = true, optional = true }
zcash_primitives = { workspace = true, optional = true }
zcash_protocol = { workspace = true, default-features = false }

blake2b_simd = { workspace = true, optional = true }
rand_core = { workspace = true, optional = true }

# Encoding
postcard = { version = "1", features = ["alloc"] }
serde.workspace = true
serde_with = { version = "3", default-features = false, features = ["alloc", "macros"] }

# Payment protocols
# - Transparent
secp256k1 = { workspace = true, optional = true }
transparent = { workspace = true, optional = true }
zcash_script = { workspace = true, optional = true }

# - Sapling
bls12_381 = { workspace = true, optional = true }
ff = { workspace = true, optional = true }
jubjub = { workspace = true, optional = true }
redjubjub = { workspace = true, optional = true }
sapling = { workspace = true, optional = true }

# - Orchard
nonempty = { workspace = true, optional = true }
orchard = { workspace = true, optional = true }
pasta_curves = { workspace = true, optional = true }

# Dependencies used internally:
# (Breaking upgrades to these are usually backwards-compatible, but check MSRVs.)
# - Boilerplate
getset.workspace = true

# - Documentation
document-features = { workspace = true, optional = true }

[dev-dependencies]
incrementalmerkletree.workspace = true
secp256k1 = { workspace = true, features = ["rand"] }
shardtree.workspace = true
zcash_primitives = { workspace = true, features = [
    "test-dependencies",
    "transparent-inputs",
] }
zcash_proofs = { workspace = true, features = ["bundled-prover"] }
zip32.workspace = true

[features]
default = ["std"]
std = ["document-features"]
zip-233 = ["zcash_primitives/zip-233"]

## Enables functionality that requires Orchard protocol types.
orchard = [
    "dep:ff",
    "dep:nonempty",
    "dep:orchard",
    "dep:pasta_curves",
]

## Enables functionality that requires Sapling protocol types.
sapling = [
    "dep:bls12_381",
    "dep:ff",
    "dep:jubjub",
    "dep:redjubjub",
    "dep:sapling",
    "dep:zcash_note_encryption",
]

## Enables functionality that requires Zcash transparent protocol types.
transparent = ["dep:secp256k1", "dep:transparent", "dep:zcash_script"]

## Enables building a PCZT from the output of `zcash_primitives`'s `Builder::build_for_pczt`.
zcp-builder = ["dep:zcash_primitives"]

#! ### PCZT roles behind feature flags
#!
#! These roles require awareness of at least one payment protocol's types in order to
#! function.

## Enables the I/O Finalizer role.
io-finalizer = ["dep:zcash_primitives", "orchard", "sapling", "transparent"]

## Enables the Prover role.
prover = ["dep:rand_core", "sapling?/temporary-zcashd"]

## Enables the Signer role.
signer = [
    "dep:blake2b_simd",
    "dep:rand_core",
    "dep:zcash_primitives",
    "orchard",
    "sapling",
    "transparent",
]

## Enables the Spend Finalizer role.
spend-finalizer = ["transparent"]

## Enables the Transaction Extractor role.
tx-extractor = [
    "dep:rand_core",
    "dep:zcash_primitives",
    "orchard",
    "sapling",
    "transparent",
]

[[test]]
name = "end_to_end"
required-features = ["io-finalizer", "prover", "signer", "tx-extractor"]

[lints]
workspace = true
